version: "3.8"

networks:
  preprod:
     external: true  

<<<<<<< HEAD
<<<<<<< HEAD
#volumes:
#  code:

services:
  frontend:
    image: ${IMAGE_BASE}/stable/frontend:${FRONTEND_STABLE_TAG}
    logging:
      driver: gelf
      options:
        gelf-address: udp://${DEVOPS_HOST}:12201
    environment:
      - TZ=Europe/Paris
      - API_BASE_URL=http://api:3000
    volumes:
       - /etc/localtime:/etc/localtime:ro
    #   - code:/my-project
    #   - /usr/src/app/node_modules
    restart: unless-stopped
    container_name: frontend
    depends_on:
      - api
    labels:
        - traefik.enable=true
        - traefik.http.routers.frontend.rule=Host(`${DOMAIN_BASE}`)
        - traefik.http.routers.frontend.entrypoints=websecure
        - traefik.http.services.frontend.loadbalancer.server.port=3000
=======
volumes:
  db-data-prod:
    external: true
=======
#volumes:
  #code:
>>>>>>> dded1f6 (Update the dockignore and infra folders)

services:
  front-release:
    image: ${IMAGE_BASE}/release/frontend:${FRONTEND_RELEASE_TAG}
    environment:
      - TZ=Europe/Paris
    #volumes:
    #    - /etc/localtime:/etc/localtime:ro
    #   - code:/usr/src/app
    #   - /usr/src/app/node_modules
    restart: unless-stopped
    links:
      - api-release:api
    container_name: frontend-release
    depends_on:
      - api
    labels:
        - traefik.enable=true
<<<<<<< HEAD
        - traefik.http.routers.api.rule=Host(`api.${DOMAIN_BASE}`)
        - traefik.http.routers.api.entrypoints=websecure
        - traefik.http.routers.api.service=registry-web
        - traefik.http.services.api.loadbalancer.server.port=3000
>>>>>>> 34a778e (Set up infra as code)
=======
        - traefik.http.routers.api-release.rule=Host(`dev.${DOMAIN_BASE}`)
        - traefik.http.routers.api-release.entrypoints=websecure
        - traefik.http.services.api-release.loadbalancer.server.port=3000
>>>>>>> dded1f6 (Update the dockignore and infra folders)
    networks:
      - preprod