version: "3.8"

networks:
  prod:
     external: true  

<<<<<<< HEAD
#volumes:
#  code:

services:
  frontend:
    image: ${IMAGE_BASE}/stable/frontend:${FRONTEND_STABLE_TAG}
    logging:
      driver: gelf
      options:
        gelf-address: udp://${DEVOPS_HOST}:12201
    environment:
      - TZ=Europe/Paris
      - API_BASE_URL=http://api:3000
    volumes:
       - /etc/localtime:/etc/localtime:ro
    #   - code:/my-project
    #   - /usr/src/app/node_modules
    restart: unless-stopped
    container_name: frontend
    depends_on:
      - api
    labels:
        - traefik.enable=true
        - traefik.http.routers.frontend.rule=Host(`${DOMAIN_BASE}`)
        - traefik.http.routers.frontend.entrypoints=websecure
        - traefik.http.services.frontend.loadbalancer.server.port=3000
=======
volumes:
  db-data-prod:
    external: true

services:
  db:
    image: ${BASE_IMG}/stable/db:${DB_STABLE_TAG}
    container_name: db
    volumes:
      - db-data-prod:/data/db
    networks:
      - prod 
  api:
    image: ${BASE_IMG}/stable/api:${API_STABLE_TAG}
    container_name: api
    labels:
        - traefik.enable=true
        - traefik.http.routers.api.rule=Host(`api.${DOMAIN_BASE}`)
        - traefik.http.routers.api.entrypoints=websecure
        - traefik.http.routers.api.service=registry-web
        - traefik.http.services.api.loadbalancer.server.port=3000
>>>>>>> 34a778e (Set up infra as code)
    networks:
      - prod