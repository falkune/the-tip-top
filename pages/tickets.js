import React, { useEffect, useState, useContext } from "react";
import ApiContext from '../context/apiContext';
import Cookies from "js-cookie";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import Header from "../component/Header";
import Footer from "../component/Footer";
import Ticket from "../component/Ticket";
import { billets } from "../component/Data";
import ButtonGrid from "../component/ButtonGrid";
import { AgGridReact } from "ag-grid-react";
import "ag-grid-community/styles//ag-grid.css";
import "ag-grid-community/styles//ag-theme-alpine.css";
import "animate.css";


export default function Tickets() {
  const context = useContext(ApiContext)
  const [colDefs, setColDefs] = useState([
    {
      field: "number",
      minWidth: 150,
    },
    {
      field: "jeux concours",
      minWidth: 150,
    },
     {
      field: "go",
      minWidth: 200,
      cellRenderer: ButtonGrid,
    },
    {
      field: "Lots délivré",
      minWidth: 150,
    },
  ]);
  const [alltickets, setAlltickets] = useState([]);
  const [width, setWidth] = useState(0);
  const [role, setRole] = useState(null);
  const [open, setOpen] = React.useState(false);
  const toggleDrawer = (newOpen) => () => {
    setOpen(newOpen);
  };

  const updateDimensions = () => {
    setWidth(window.innerWidth);
    localStorage.setItem("width", width);
  };

  useEffect(() => {
    updateDimensions();
    window.addEventListener("resize", updateDimensions);
    return () => window.removeEventListener("resize", updateDimensions);
  }, [width]);
  console.log("width", width);

  useEffect(() => {
    getAllTickets();
  }, []);

  const getAllTickets = async () => {
    //fonction pour créer un ticket
    console.log('hot tickets')
    try {
      context.backend.auth.tickets.post('tickets-by-client',{idClient:Cookies.get("idClient")}).then((value) =>
      {console.log(value,"value") 
      
    }
     )
    } catch (e) {
      console.log(e);
    }
  };
  const number = billets.length;
  console.log(billets);
  return (
    <div className={styles.container}>
      <Head>
        <title>TeaBingo - Jeux concours</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fav.png" />
      </Head>
      <Header menu="tickets"/>
      <h1 className={styles.h1}>Mes tickets</h1>
      <p style={{ fontSize: 18, color: "grey" }}>
        Vous avez{" "}
        <strong style={{ color: " #38870D" }}>{alltickets.length} </strong>
        {`tickets gagnants`}
      </p>
      <div style={stylez.gain}>
        <div
          className="ag-theme-alpine"
          style={{
            height: "800px",
            width: width < 650 ? "90%" : 800,
          }}
        >
          <AgGridReact
           className=" animate_animated animate__bounceInUp"
            pagination={true}
            rowData={billets}
            columnDefs={colDefs}
          ></AgGridReact>
        </div>
      </div>
      <Footer />
    </div>
  );
}

const stylez = {
  gain: {
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    width: "100vw",
    minHeight: "100vh",
  },
};