import React, { useState,useContext } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Header from "../component/Header";
import Footer from "../component/Footer";
import Link from "next/link";
import google from "../image/google.svg";
import facebook from "../image/facebook.png";
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { useRouter } from "next/router";
import { faEye } from '@fortawesome/free-solid-svg-icons';
import ErrorMessage from "../component/ErrorMessage";
import ApiContext from '../context/apiContext';
import {register, googleLoginRegister, facebookLoginRegister} from '../fonctions/users';
import Cookies from 'js-cookie';

export default function Inscription() {
  const context = useContext(ApiContext);
  const router = useRouter();
  const [email, setEmail] = useState("");
  const [emailMatch, setEmailMatch] = useState(false);
  const [nom, setNom] = useState("");
  const [valideName, setValideName] = useState(false);
   const [dateNaissance, setDateNaissance] = useState(null);
  const [majorite, setMajorite] = useState(false);
  const [password, setPassword] = useState("");
  const [passwordMatch, setPasswordMatch] = useState(false);
  const [showPassword, setShowpassword] = useState(false);
  const [confirmPassword, setConfirmPassword] = useState("");
  const [confimation, setConfirmation] = useState(false);
  const [showVerifPassword, setShowVerifpassword] = useState(false);
  const [error, setError] = useState(false);
  const [message, setMessage] = useState("");
  
  const verifyEmail = () => {
    let validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
    if(!email.match(validRegex)){
      setEmailMatch(false);
    }
  }

  const verifyName = () => {
    if(nom.length < 6)
      setValideName(false);
  }

  const verifyPassword = () => {
    let validRegex = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$/\\"&+,:;`={}[\]?@#|'<~°£¨²§µ>.^*()%!-])(?=.{8,})/);
    if(!password.match(validRegex)){
      setPasswordMatch(false);
    }
  }

  const showHidePassword = () => {
    if(showPassword){
      setShowpassword(false);
    }else{
      setShowpassword(true);
    }
  }

  const showHideVerifPassword = () => {
    if(showVerifPassword){
      setShowVerifpassword(false);
    }else{
      setShowVerifpassword(true);
    }
  }

  const verifyPaswords = () => {
    if(password === confirmPassword){
      setConfirmation(true);
    }
  }

  const verifMajorite = () => {
    let months = Date.now() - new Date(dateNaissance);
    let monthDate = new Date(months);
    let years = monthDate.getUTCFullYear();
    let age = Math.abs(years - 1970);
    if(age >= 18){
      setMajorite(true);
    }
  }
  // get register with google
  const googleRegister = async () => {
    let user = await googleLoginRegister(context)
    if (user.statusCode) {
      console.log(user)
      setMessage(user.message)
    } else {
      if (Cookies.get('role') == "admin")
        router.push({ pathname: "/stats" }, undefined, { shallow: true });
      else
        router.push({ pathname: "/bingo" }, undefined, { shallow: true });
    }
  }
  // get register with facebook
  const facebookRegistration = async () => {
    let user = await facebookLoginRegister(context)
    if (user.statusCode) {
      console.log(user)
      setMessage(user.message)
    } else {
      if (Cookies.get('role') == "admin")
        router.push({ pathname: "/stats" }, undefined, { shallow: true });
      else
        router.push({ pathname: "/bingo" }, undefined, { shallow: true });
    }
  }


  const inscription = async (e) => {
    e.preventDefault();
    if(emailMatch && passwordMatch && confimation && majorite){
      register(context, nom, email, password, dateNaissance)
      router.push({ pathname: "/connexion" }, undefined, { shallow: true });
    }
  }

  

  return (
    <div>
      <div className={styles.container}>
        <Head>
          <title>TeaBingo - Jeux concours</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/fav.png" />
        </Head>
        <Header />
        <section className={styles.login}>
          <form
            className={styles.part}
            style={{ borderBottom: "solid 1px #D2D2D2" }}
            onSubmit={(e) => inscription(e)}
          >
            <h1 className={styles.h1} style={{ fontSize: 25 }}>
              Inscription
            </h1>
            <input
              type="email"
              placeholder="Email"
              onChange={(e) => setEmail(e.target.value)}
              onBlur={verifyEmail}
              onFocus={() => setEmailMatch(true)}
              required
            />
            <label style={{color: "red", display: (emailMatch || email == "") ? "none" : "block"}}>Vous email invalide !</label>
            <input
              type="text"
              placeholder="Nom prénom"
              onChange={(e) => setNom(e.target.value)}
              onBlur={verifyName}
              onFocus={() => setValideName(true)}
              required
            />
            <label style={{color: "red", display: (valideName || nom == "") ? "none" : "block"}}>le nom complet doit faire minimum 6 caractères</label>
            <input
              type="date"
              placeholder="Date de naissance"
              onChange={(e) => setDateNaissance(e.target.value)}
              onBlur={verifMajorite}
              required
            />
            <label style={{color: "red", display: (majorite || dateNaissance == null) ? "none" : "block"}}>Vous devez avoir au moins 18 ans pour participer...</label>
            <div style={{position : "relative", width: "100%"}}>
              <input
                type={showPassword ? "text" : "password"}
                placeholder="Mot de passe"
                onChange={(e) => setPassword(e.target.value)}
                onBlur={verifyPassword}
                onFocus={() => setPasswordMatch(true)}
                style={{color : (passwordMatch || password == "") ? "black" : "orange" }}
                required
              />
              <span 
                style={{position: "absolute", top: "36%",right: "40px"}}
                onClick={showHidePassword}>
                <FontAwesomeIcon icon={faEye} />
              </span>
              <label style={{color: "red", display: (passwordMatch || password == "") ? "none" : "block"}}>Vous mot de passe invalide !</label>
            </div>
            <div style={{position : "relative", width: "100%"}}>
              <input
                type={showVerifPassword ? "text" : "password"}
                placeholder="Confirmation du mot de passe"
                onChange={(e) => setConfirmPassword(e.target.value)}
                onBlur={verifyPaswords}
                style={{color : (password == confirmPassword) ? "black" : "orange" }}
                required
              />
              <span 
                style={{position: "absolute", top: "36%",right: "40px"}}
                onClick={showHideVerifPassword}>
                <FontAwesomeIcon icon={faEye} />
              </span>
            </div>
            <label style={{color: "red", display: (password == confirmPassword || confirmPassword == "") ? "none" : "block"}}>mots de passe non conformes !</label>
            <button
              className={styles.action}
              style={{ animation: "pulse 1sec infite" }}
            >
              Inscription
            </button>
            {error && (
              <ErrorMessage errorMessage={message}/>
            )}
          </form>
          <div className={styles.social}>
            <button
              style={{
                backgroundColor: "#437BFF",
                color: "white",
                position: "relative",
              }}
              onClick={facebookRegistration}
            >
              <span style={{ position: "absolute", left: 20, bottom: 1 }}>
                <Image
                  src={facebook}
                  width="16"
                  height="40"
                  objectFit="contain"
                  alt="facebook logo"
                />
              </span>
              S'inscrire
            </button>
            <button
              style={{
                backgroundColor: "white",
                color: "#437BFF",
                boxShadow: "0px 0px 6px 4px rgba(0,0,0,0.10)",
              }}
              onClick={googleRegister}
            >
              <span style={{ position: "absolute", left: 8, bottom: 1 }}>
                <Image src={google} width="40" height="40" alt="google logo" />
              </span>
              S'inscrire
            </button>
          </div>
        </section>
        <small style={{color:"grey"}}>
          Déjà un compte ?
          <strong style={{
                backgroundColor:"#F2F2F2",
                margin:10,
                fontWeight:"bold",
                color: "#437BFF",
                border:"none",
                padding:10,
                border:5
              }}>
            <Link href="/connexion"> Se connecter</Link>
          </strong>
        </small>
      </div>
      <Footer />
    </div>
  );
}


