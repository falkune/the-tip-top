import React, { useEffect, useState } from "react";
import Head from 'next/head'
import Link from "next/link"
import styles from '../styles/Home.module.css'
import Header from '../component/Header'
import Footer from "../component/Footer"
import { useRouter } from 'next/router'

export default function Bingo() {
  const router = useRouter();
  const [num, setNum] = useState(
    router.query.number ? router?.query?.number : null
  );
  const [current, setCurrent] = useState("");

  useEffect(() => {
    getCurrent();
  }, []);

  console.log(num, "num");
  const goResult = () => {
    router.push({
      pathname: `resultat`,
      query: { number: num },
    });
  };

  const getCurrent = async () => {
    //fonction pour créer un ticket
    const token = localStorage.getItem("token");
    console.log("tokens", token);

    const config = {
      headers: { Authorization: `Bearer ${token}` },
    };
    const api =
      "https://api.dev.dsp-archiwebo21-ct-df-an-cd.fr/Session/get-current-session";
    console.log("config", config);

    try {
      let currenSession = await axios.get(api, config);
      console.log("current session", currenSession.data[0]);
      setCurrent(currenSession.data[0]);
      localStorage.setItem("current", currenSession.data[0]);
      // console.log(currenSession.data);
    } catch (e) {
      console.log(e);
    }
  };

  const handleNameChange = (e) => {
    const limit = 10;
    setNum(e.target.value.slice(0, limit));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>{router.query.num}- TeaBingo - Résultat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fav.png" />
      </Head>
      <Header />
      <section className={styles.block}>
        <h1 className={styles.h1}>Bingo ticket</h1>

        <p
          style={{
            fontWeight: 600,
            fontSize: "1.2em",
            padding: 15,
            marginBottom: 5,
            color: "#ACACAC",
          }}
        >
          Tester votre ticket pour voir votre lot remporté (100% gagnant )
        </p>
        <form className={styles.bingo}>
          <input
            type="number"
            name="numero"
            maxLength={2}
            min={0}
            max={99}
            autoComplete="off"
            placeholder="Veuillez rentrer vos 10 numéros"
            onChange={handleNameChange}
            value={num}
          />
        </form>
        {num !== null && num.length < 10 && (
          <small
            style={{ color: "red", textDecoration: "none", marginTop: 20 }}
          >
            Numéro invalide
          </small>
        )}
        {num !== null && num.length === 10 && (
          <small
            style={{
              color: "green",
              textDecoration: "none",
              marginTop: 20,
            }}
          >
            Numéro valide
          </small>
        )}
        {num !== null && num.length === 10 ? (
          <button
            type="button"
            onClick={goResult}
            className={styles.action}
            style={{ margin: 25 }}
          >
            Valider
          </button>
        ) : (
          <button
            disabled={true}
            className={styles.noaction}
            style={{ margin: 25 }}
          >
            Valider
          </button>
        )}

        <Link href="/#lots">
          <small style={{ color: "#41D8C2", fontSize: "1.2em" }}>
            Voir les differents lots
          </small>
        </Link>
        <Image height={250} width={250} src={win} alt="" />
      </section>
      <Footer />
    </div>
  );
}
