import React, { useEffect, useState } from "react";
import Image from "next/image";
import Head from "next/head";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import Header from "../component/Header";
import Footer from "../component/Footer";
import { useRouter } from "next/router";
import gift from "../image/win.gif"
import axios from "axios";
import Breadcrumbs from 'nextjs-breadcrumbs'; 
import 'nextjs-breadcrumbs/dist/index.css'



export default function Bingo() {
  const [num, setNum] = useState(null);
  const [current, setCurrent] = useState("");
  const router = useRouter();

  useEffect(() => {
    getCurrent();
  }, []);
  const goResult = () => {
    if (num.length === 10) {
      router.push({
        pathname: `resultat`,
        query: { number: num },
      });
    } else console.log("perdu");
  };
  const getCurrent = async () => {
    //fonction pour créer un ticket
    const token = localStorage.getItem("token");
    const config = {
      headers: { Authorization: `Bearer ${token}` },
    };
    const api =
      "https://api.dev.dsp-archiwebo21-ct-df-an-cd.fr/Session/get-current-session";
    console.log("config", config);

    try {
      let currenSession = await axios.get(api, config);
      setCurrent(currenSession.data);
      localStorage.setItem("current", currenSession.data);
      console.log(currenSession.data);
    } catch (e) {
      console.log(e);
    }
  };


  const handleNameChange = (e) => {
    const limit = 10;
    setNum(e.target.value.slice(0, limit));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>{router === undefined ? null : router.query.num}- TeaBingo - Résultat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fav.png" />
      </Head>
      <Header menu="bingo" />
      <section className={styles.block}>
        <h1 className={styles.h1}>Bingo ticket</h1>
      
        <p>Tester votre ticket pour voir votre lot remporté (100% gagnant )</p>
        <form className={styles.bingo}>
          <input
            type="number"
            name="numero"
            autoComplete="off"
            placeholder="Veuillez rentrer vos 10 numéros"
            maxLength={10}
            onChange={handleNameChange}
            value={num}
          />
        </form>
      
        {num !== null && num.length === 10 && (
          <small
            style={{
              color: "green",
              textDecoration: "none",
              marginTop: 20,
            }}
          >
            Numéro valide
          </small>
        )}
        {num !== null && num.length === 10 ? (
          <button
            type="button"
            onClick={goResult}
            className={styles.action}
            style={{ margin: 25 }}
          >
            Valider
          </button>
        ) : (
          <button
            disabled={true}
            className={styles.noaction}
            style={{ margin: 25 }}
          >
            Valider
          </button>
        )}
             <Link href="/#lots">
          <small style={{ color: " #02558D", fontSize: "1.2em" }}>
            Voir les differents lots
          </small>
        </Link>


          <Image src={gift} height={250} width={250} alt="logo" />


   
      </section>
      <Footer />
    </div>
  );
}
