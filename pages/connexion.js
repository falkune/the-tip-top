<<<<<<< HEAD
import { useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import Header from '../component/Header';
=======
import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Header from "../component/Header";
>>>>>>> 0760426 (udpate format)
import Footer from "../component/Footer";
import Link from "next/link";
import google from "../image/google.svg";
import facebook from "../image/facebook.png";
<<<<<<< HEAD
import { useRouter } from 'next/router';
import {firebaseApp} from '../config/firebase';

import { 
  AuthProvider, 
  getAuth, 
  signInWithPopup, 
  GoogleAuthProvider, 
  FacebookAuthProvider 
} from "firebase/auth"
=======
import { useRouter } from "next/router";
import { firebaseApp } from "../config/firebase";
import { setCookie } from "cookies-next";
import { getCookie } from "cookies-next";
>>>>>>> 0760426 (udpate format)

import {
  AuthProvider,
  getAuth,
  signInWithPopup,
  GoogleAuthProvider,
  FacebookAuthProvider,
} from "firebase/auth";

export default function Connexion() {
<<<<<<< HEAD
  // email and password
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')

=======
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [role, setRole] = useState(getCookie("user"));

  const GoogleProvider = new GoogleAuthProvider();
  const FacebookProvider = new FacebookAuthProvider();

>>>>>>> 0760426 (udpate format)
  const router = useRouter();

  const connexion = (e) => {
    // signIn function contact the backend API service
<<<<<<< HEAD
    setFool(false);
=======
>>>>>>> 0760426 (udpate format)
    e.preventDefault();
    const params = {
      email: email,
      password: password,
    };

    const options = {
      method: "POST",
      headers: {
        Accept: "Application/json",
        "Content-Type": "application/json",
      },
      body: JSON.stringify(params),
    };

<<<<<<< HEAD
    fetch('https://api.dev.dsp-archiwebo21-ct-df-an-cd.fr/user/login/', options)
    .then((response) => response.json())
    .then((data) => {
      // console.log(data);
      // en fonction du role de l'utilisateur rediriger vers la bonne interface
      localStorage.setItem('token',data.token)
      if (data.roles[0] === "admin"){
        localStorage.setItem("accessToken", data.accessToken)
        router.push('/stats')
      }else{
        localStorage.setItem('role','client')
        router.push('/resultat')
      }
    })
    .catch((error) => {
      console.log(error);
    })
  }
  
  const signInWith = (provider) => {

    
  }
=======
    fetch("https://api.dev.dsp-archiwebo21-ct-df-an-cd.fr/user/login/", options)
      .then((response) => response.json())
      .then((data) => {
        console.log("log", data);
        // en fonction du role de l'utilisateur rediriger vers la bonne interface
        setCookie("user", "admin");
        setRole(getCookie("user"));
        console.log("roles", data.roles[0]);
        localStorage.setItem("token", data.accessToken);
        if (data.roles.includes("admin")) {
          localStorage.setItem("role", "admin");
          router.push("/stats");
        } else {
          localStorage.setItem("role", "client");
          router.push("/bingo");
        }

        // router.push('/bingo')
      })
      .catch((error) => {
        console.log(error);
      });
  };

  const signInWith = (provider) => {
    // this function connect user withn with his google or facebook account
    const firebaseAuth = getAuth(firebaseApp);
    signInWithPopup(firebaseAuth, provider)
      .then((res) => {
        const user = res.user;
        console.log(user);
        const displayName = user.displayName;
        const email = user.email;
        const uid = user.uid;
        // contacter API
      })
      .catch((err) => {
        const errorCode = err.code;
        const errorMessage = err.message;
        // console.log(errorMessage)
        if (err.code === "auth/account-exists-with-different-credential") {
          console.log("error");
        }
      });
  };
>>>>>>> 0760426 (udpate format)

  return (
    <div>
      <div className={styles.container}>
        <Head>
          <title>TeaBingo - Jeux concours</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/fav.png" />
        </Head>
<<<<<<< HEAD
        <Header/>
=======
        <Header user={role} />
>>>>>>> 0760426 (udpate format)
        <section className={styles.login}>
          <form
            className={styles.part}
            style={{ borderBottom: "solid 1px #D2D2D2" }}
            onSubmit={(e) => connexion(e)}
          >
            <h1 className={styles.h1} style={{ fontSize: 25 }}>
              Connexion
            </h1>
            <input
              type="text"
              placeholder="Email"
              onChange={(e) => setEmail(e.target.value)}
            />
            <input
              type="password"
              placeholder="Mot de passe"
              onChange={(e) => setPassword(e.target.value)}
            />
<<<<<<< HEAD
            {fool && (
              <small style={{ color: "red" }}>
                Mot de passe ou email incorrecte
              </small>
            )}

=======
>>>>>>> 0760426 (udpate format)
            <button
              className={styles.action}
              style={{ animation: "pulse 1sec infite" }}
            >
              Connexion
            </button>
          </form>
          <div className={styles.social}>
            <button
              style={{
                backgroundColor: "#437BFF",
                color: "white",
                position: "relative",
              }}
<<<<<<< HEAD
              onClick={signInWith}
=======
              onClick={() => signInWith(FacebookProvider)}
>>>>>>> 0760426 (udpate format)
            >
              <span style={{ position: "absolute", left: 20, bottom: 1 }}>
                <Image
                  src={facebook}
                  width="16"
                  height="40"
                  objectFit="contain"
                  alt="facebook logo"
                />
              </span>
              Connexion
            </button>
            <button
              style={{
                backgroundColor: "white",
                color: "#437BFF",
                boxShadow: "0px 0px 6px 4px rgba(0,0,0,0.10)",
              }}
<<<<<<< HEAD
              onClick={signInWith}
=======
              onClick={() => signInWith(GoogleProvider)}
>>>>>>> 0760426 (udpate format)
            >
              <span style={{ position: "absolute", left: 8, bottom: 1 }}>
                <Image src={google} width="40" height="40" alt="google logo" />
              </span>
              Connexion
            </button>
          </div>
        </section>
        <small>
          Pas encore de compte ?
          <strong style={{ color: "#437BFF" }}>
            {" "}
<<<<<<< HEAD
            <button onClick={goSignup}> S'inscrire</button>
=======
            <Link href="/inscription"> S'inscrire</Link>
>>>>>>> 0760426 (udpate format)
          </strong>
        </small>
      </div>
      <Footer />
    </div>
  );
}
